<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <script src="http://d3js.org/d3.v3.min.js"></script>
  <link href='https://fonts.googleapis.com/css?family=Arvo:400,400italic' rel='stylesheet' type='text/css'>

  <title>Co2 Emissons</title>
  <link rel="stylesheet" href="css/main.css">
</head>
<body>
  <div class="row title">
   
    
     <h1>!! World Needs to Phase Out Carbon Emissions!! </h1>
   
     
   
   
   </div>
     <hr > 
</svg>
   </div>
    </div>
      
      <div class ="row ChartandDescription">
        <div class = ".col-6">
        <div id="chartContainer">
   <script src="http://d3js.org/d3.v3.min.js"></script>
  <script src="http://dimplejs.org/dist/dimple.v2.0.0.min.js"></script>
  <script type="text/javascript">
    var svg = dimple.newSvg("#chartContainer", 600, 445);
    d3.csv("MyData_updated.csv", function (data) {
     // data = dimple.filterData(data, "Owner", ["Aperture", "Black Mesa"])
     // datacountry = dimple.filterData(data, "countryName", [
     //          "Canada", "Germany", "Japan", "United States", "France", "Italy",
     //          "United Kingdom"
     //      ]);
     datayear = dimple.filterData(data, "Year", [
              "1961","1965","1970","1975","1980","1985","1990","1995","2000","2005","2010"
          ]);

     // Create the indicator chart on the right of the main chart
      var indicator = new dimple.chart(svg, datayear);

       // Pick blue as the default and orange for the selected month
      var defaultColor = indicator.defaultColors[0];
      var indicatorColor = indicator.defaultColors[2];

  // The frame duration for the animation in milliseconds
      var frame = 3000;

      var firstTick = true;

      // Place the indicator bar chart to the right
      indicator.setBounds(434, 49, 153, 311);
      // Add the bars to the indicator and add event handlers
      
// Add dates along the y axis
      var y = indicator.addCategoryAxis("y", "Year");
      //var myChart = new dimple.chart(svg, data);
      //myChart.setBounds(60, 30, 505, 305);
      var x = indicator.addMeasureAxis("x", "countryName");
      x.hidden=true;
      y.addOrderRule(datayear);
      //var y=indicator.addMeasureAxis("y", "co2");
      var s = indicator.addSeries(null, dimple.plot.bar);

      s.addEventHandler("click", onClick);

       s.getTooltipText = function (e) {
         return [
         "==>" 
         ];
         };
          // Draw the side chart
      indicator.draw();

      // Remove the title from the y axis
      y.titleShape.remove();

          // Remove the lines from the y axis
          y.shapes.selectAll("line,path").remove();
      // myChart.addSeries("countryName", dimple.plot.bubble);
      // myChart.addSeries("countryName", dimple.plot.line);
      // myChart.addLegend(60, 10, 500, 20, "right");
      // myChart.draw();

      // Move the y axis text inside the plot area
          y.shapes.selectAll("text")
                  .style("text-anchor", "start")
                  .style("font-size", "11px")
                  .attr("transform", "translate(18, 0.5)");


                  // This block simply adds the legend title. I put it into a d3 data
          // object to split it onto 2 lines.  This technique works with any
          // number of lines, it isn't dimple specific.
          svg.selectAll("title_text")
                  .data(["Click bar to select",
                      "and pause. Click again",
                      "to resume animation"])
                  .enter()
                  .append("text")
                  .attr("x", 435)
                  .attr("y", function (d, i) { return 15 + i * 12; })
                  .style("font-family", "sans-serif")
                  .style("font-size", "10px")
                  .style("color", "Black")
                  .text(function (d) { return d; });


                    // Manually set the bar colors
          s.shapes
                  .attr("rx", 10)
                  .attr("ry", 10)
                  .style("fill", function (d) { return (d.y === '2010' ? indicatorColor.fill : defaultColor.fill) })
                  .style("stroke", function (d) { return (d.y === '2010' ? indicatorColor.stroke : defaultColor.stroke) })
                  .style("opacity", 0.4);


                   // Draw the main chart
          var bubbles = new dimple.chart(svg, data);
          bubbles.setBounds(60, 50, 355, 310)
          // bubbles.addCategoryAxis("x", "countryName");
          // bubbles.addMeasureAxis("y", "co2");
          x=bubbles.addCategoryAxis("x", "countryName");
          
          y=bubbles.addMeasureAxis("y", "co2");
          // var barcolor=  defaultColor.fill;
          // barcolor.opacity=0.2;
          // //bubbles.addColorAxis("c",  barcolor);
          //var line=bubbles.addSeries(null, dimple.plot.line)
          var bar= bubbles.addSeries(null, dimple.plot.bar)
          
         //  line.interpolation = "step";
   
           // Add a storyboard to the main chart and set the tick event
          var story = bubbles.setStoryboard("Year", onTick);
          // Change the frame duration
          story.frameDuration = frame;
          // Order the storyboard by date
          //story.addOrderRule("Date");

          // Draw the bubble chart
          bar.afterDraw = function (shape, data) {
        // Get the shape as a d3 selection
       // debugger;
        var bar = d3.select(shape),
          rect = {
            x: parseFloat(bar.attr("x")),
            y: parseFloat(bar.attr("y")),
            width: parseFloat(bar.attr("width")),
            height: parseFloat(bar.attr("height"))
          };
        // Only label bars where the text can fit
        
          // Add a text label for the value
          svg.append("text")
            // Position in the centre of the shape (vertical position is
            // manually set due to cross-browser problems with baseline)
            .attr("x", rect.x + rect.width / 2)
            .attr("y", rect.y -2.5)//+ rect.height / 2 + 3.5)
            .attr("class","barvalue")
            // Centre align
            .style("text-anchor", "middle")
            .style("font-size", "12px")
            .style("font-family", "sans-serif")
            // Make it a little transparent to tone down the black
            .style("opacity", 0.6)
            // Format the number
            .text(d3.format(",.1f")(data.yValue / 1000) + "K");
        
      };

          bubbles.draw();
          y.titleShape.text("Co2 Emissions(KT)");
          x.titleShape.text("");

          // Orphan the legends as they are consistent but by default they
          // will refresh on tick
          bubbles.legends = [];
          // Remove the storyboard label because the chart will indicate the
          // current month instead of the label
          

          // On click of the side chart
          function onClick(e) {
              // Pause the animation
              story.pauseAnimation();
              // If it is already selected resume the animation
              // otherwise pause and move to the selected month
              if (e.yValue === story.getFrameValue()) {
                  story.startAnimation();
              } else {
                  story.goToFrame(e.yValue);
                  story.pauseAnimation();
              }
          }

          function onTick(e) {
              if (!firstTick) {
                  // Color all shapes the same
                  s.shapes
                          .transition()
                          .duration(frame / 2)
                          .style("fill", function (d) { return (d.y === e ? indicatorColor.fill : defaultColor.fill) })
                          .style("stroke", function (d) { return (d.y === e ? indicatorColor.stroke : defaultColor.stroke) });
                           y.titleShape.text("Co2 Emissions(KT)");
                           x.titleShape.text("");
                           d3.selectAll('svg').selectAll('.barvalue').remove();
              }
              firstTick = false;
          }
    });
  </script>
</div>
</div>   
<div class=".col-6 description">
<h2> <u>Co2 Emission Levels of G7 Countries at each dacade(1961-2010):</u></h2>
Barack Obama, Angela Merkel and the other leaders of the world’s seven largest economies met in Germany for wide-ranging discussions on the state of the world on Sunday and Monday. Climate and energy were high on the agenda with concurrent climate talks happening in Bonn and major negotiations set for Paris later this year.
The document makes a historic commitment to stop pumping greenhouse gases into the atmosphere by century’s end, with a 40-70 percent reduction guidepost at 2050. While the call for decarbonization is some of the strongest language yet of how some of the world’s most powerful countries want to deal with climate change, there are few clues of how they plan to get there. However, the few clues that have emerged could give raise eyebrow about how serious the G7 leaders are about dealing with climate change in the present.
<h4>The Big News: Emissions Must Fall and Everyone Has a Role</h4>
Here’s the money quote from the G7 declaration:
<i>“Mindful of this (2°C) goal and considering the latest IPCC results, we emphasize that deep cuts in global greenhouse gas emissions are required with a decarbonisation of the global economy over the course of this century.”
That means that the G7 leaders want to say goodbye to carbon as the driving force behind the economy. They also set a 2050 mark of reducing emissions 40-70 percent below 2010 levels. </i>

The countries that comprise the G7 account for a third of global carbon emissions. So while their efforts are key, it’s clear both in the language of the document and the carbon calculus that all the world’s countries will have to get involved.
</div>
      
</div>      
      <div class="row BottomText">Above graph shows increasing levels of co2 emissons at each dacade. A clear trend in
      increasing level of CO2 emissions can be observed at each dacade. There has been significant reduction in co2 emission levels in the last year 2010 as compare to previous year levels, as evident from the data. It is high time that world needs to take steps to reduce CO2 emissions, given the risks involved with the increasing levels of co2.  
      <u>Note: The text description used above is not my created and has been solely used for demonstration purpose only .I have referred to http://www.climatecentral.org/news/g7-carbon-emissions-19082 to get the text description and have built a stroy around it. </u>
    </div>
    </div>
  
</body>
</html>
